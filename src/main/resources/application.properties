spring.config.import=file:.env[.properties],file:.env[.properties]
debug=true
spring.application.name=lydinc_backend
server.port=8080
server.servlet.context-path=/api
spring.main.banner-mode=off
spring.jpa.properties.hibernate.default_schema=public
# Database Configuration
spring.datasource.driver-class-name=${DB_DRIVER}
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.sql.init.mode=never
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true
# JWT Configuration
jwt.secret-key=${JWT_SECRET}
jwt.accessToken-expiration=${JWT_ACCESS_TOKEN_EXPIRATION}
jwt.refreshToken-expiration=${JWT_REFRESH_TOKEN_EXPIRATION}
# Google Drive Configuration
google-drive.parent-folder-id=${GOOGLE_DRIVE_PARENT_FOLDER_ID}
# Mail Configuration
spring.mail.host=${MAIL_HOST}
spring.mail.port=${MAIL_PORT}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=${MAIL_SMTP_AUTH}
spring.mail.properties.mail.smtp.starttls.enable=${MAIL_SMTP_STARTTLS}
logging.config=classpath:log4j2-spring.xml
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=900MB
spring.servlet.multipart.max-request-size=900MB
server.tomcat.max-swallow-size=900MB
# Kafka Configuration
spring.kafka.bootstrap-servers=localhost:9092
# Producer Configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
# Consumer Configuration
spring.kafka.consumer.group-id=notification-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
